openapi: 3.0.3
info:
  title: Cuidado De Mascota API
  version: v1

servers:
  - url: http://localhost:8080/api/v1
    description: Base URL for API

paths: {}

components:
  schemas:

    # ================== BASE ==================
    BaseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64

    AbstractDTO:
      allOf:
        - $ref: '#/components/schemas/BaseDTO'
        - type: object
          properties:
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            active:
              type: boolean

    BaseResult:
      type: object
      properties:
        totalCount:
          type: integer
          example: 25
        items:
          type: array
          items:
            $ref: '#/components/schemas/BaseDTO'

    # ================== ROLE ==================
    RoleRequestDTO:
      type: object
      properties:
        name:
          type: string
          maxLength: 50

    RoleResponseDTO:
      allOf:
        - $ref: '#/components/schemas/BaseDTO'
        - type: object
          properties:
            name:
              type: string

    RoleResult:
      allOf:
        - $ref: '#/components/schemas/BaseResult'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/RoleResponseDTO'

    # ================== USER ==================
    UserRequestDTO:
      type: object
      properties:
        name:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
        phoneNumber:
          type: string
        profilePhoto:
          type: string
        roleId:
          type: integer

    UserResponseDTO:
      allOf:
        - $ref: '#/components/schemas/AbstractDTO'
        - type: object
          properties:
            name:
              type: string
            lastName:
              type: string
            email:
              type: string
            phoneNumber:
              type: string
            profilePhoto:
              type: string
            roleId:
              type: integer

    UserResult:
      allOf:
        - $ref: '#/components/schemas/BaseResult'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/UserResponseDTO'

    # ================== OWNER ==================
    OwnerRequestDTO:
      type: object
      properties:
        userId:
          type: integer

    OwnerResponseDTO:
      allOf:
        - $ref: '#/components/schemas/AbstractDTO'
        - type: object
          properties:
            userId:
              type: integer

    OwnerResult:
      allOf:
        - $ref: '#/components/schemas/BaseResult'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/OwnerResponseDTO'

    # ================== CARER ==================
    CarerRequestDTO:
      type: object
      properties:
        userId:
          type: integer
        availabilityState:
          type: string
          enum: [AVAILABLE, NOT_AVAILABLE, BUSY]
        amountPet:
          type: integer
          format: int32

    CarerResponseDTO:
      allOf:
        - $ref: '#/components/schemas/AbstractDTO'
        - type: object
          properties:
            userId:
              type: integer
            availabilityState:
              type: string
              enum: [AVAILABLE, NOT_AVAILABLE, BUSY]
            amountPet:
              type: integer
              format: int32

    CarerResult:
      allOf:
        - $ref: '#/components/schemas/BaseResult'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/CarerResponseDTO'

    # ================== SERVICE TYPE ==================
    ServiceTypeRequestDTO:
      type: object
      properties:
        name:
          type: string
          maxLength: 100

    ServiceTypeResponseDTO:
      allOf:
        - $ref: '#/components/schemas/BaseDTO'
        - type: object
          properties:
            name:
              type: string

    ServiceTypeResult:
      allOf:
        - $ref: '#/components/schemas/BaseResult'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/ServiceTypeResponseDTO'

    # ================== SERVICE ==================
    ServiceRequestDTO:
      type: object
      properties:
        carerId:
          type: integer
        serviceTypeId:
          type: integer
        description:
          type: string
        price:
          type: number
          format: double

    ServiceResponseDTO:
      allOf:
        - $ref: '#/components/schemas/AbstractDTO'
        - type: object
          properties:
            carerId:
              type: integer
            serviceTypeId:
              type: integer
            description:
              type: string
            price:
              type: number
              format: double

    ServiceResult:
      allOf:
        - $ref: '#/components/schemas/BaseResult'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/ServiceResponseDTO'

    # ================== RESERVATION ==================
    ReservationRequestDTO:
      type: object
      properties:
        ownerId:
          type: integer
        carerId:
          type: integer
        serviceDate:
          type: string
          format: date-time
        reservationState:
          type: string
          enum: [PENDING, ACCEPTED, REJECTED, FINISHED]

    ReservationResponseDTO:
      allOf:
        - $ref: '#/components/schemas/AbstractDTO'
        - type: object
          properties:
            ownerId:
              type: integer
            carerId:
              type: integer
            serviceDate:
              type: string
              format: date-time
            reservationState:
              type: string
              enum: [PENDING, ACCEPTED, REJECTED, FINISHED]

    ReservationResult:
      allOf:
        - $ref: '#/components/schemas/BaseResult'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/ReservationResponseDTO'

    # ================== RESERVATION SERVICE ==================
    ReservationServiceRequestDTO:
      type: object
      properties:
        reservationId:
          type: integer
        serviceId:
          type: integer

    ReservationServiceResponseDTO:
      allOf:
        - $ref: '#/components/schemas/AbstractDTO'
        - type: object
          properties:
            reservationId:
              type: integer
            serviceId:
              type: integer

    ReservationServiceResult:
      allOf:
        - $ref: '#/components/schemas/BaseResult'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/ReservationServiceResponseDTO'

    # ================== INVOICE ==================
    InvoiceRequestDTO:
      type: object
      properties:
        reservationId:
          type: integer
        issueDate:
          type: string
          format: date-time
        totalAmount:
          type: number
          format: double

    InvoiceResponseDTO:
      allOf:
        - $ref: '#/components/schemas/AbstractDTO'
        - type: object
          properties:
            reservationId:
              type: integer
            issueDate:
              type: string
              format: date-time
            totalAmount:
              type: number
              format: double

    InvoiceResult:
      allOf:
        - $ref: '#/components/schemas/BaseResult'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/InvoiceResponseDTO'

    # ================== PAYMENT METHOD ==================
    PaymentMethodRequestDTO:
      type: object
      properties:
        name:
          type: string
          maxLength: 60

    PaymentMethodResponseDTO:
      allOf:
        - $ref: '#/components/schemas/BaseDTO'
        - type: object
          properties:
            name:
              type: string

    PaymentMethodResult:
      allOf:
        - $ref: '#/components/schemas/BaseResult'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/PaymentMethodResponseDTO'

    # ================== PAYMENT DETAIL ==================
    PaymentDetailRequestDTO:
      type: object
      properties:
        invoiceId:
          type: integer
        paymentMethodId:
          type: integer
        appliedAmount:
          type: number
          format: double

    PaymentDetailResponseDTO:
      allOf:
        - $ref: '#/components/schemas/AbstractDTO'
        - type: object
          properties:
            invoiceId:
              type: integer
            paymentMethodId:
              type: integer
            appliedAmount:
              type: number
              format: double

    PaymentDetailResult:
      allOf:
        - $ref: '#/components/schemas/BaseResult'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/PaymentDetailResponseDTO'
